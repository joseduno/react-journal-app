{"version":3,"sources":["firebase/config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebaseConfig","apiKey","process","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUCKET","messagingSenderId","REACT_APP_MESSAGINGSENDERID","appId","REACT_APP_APPID","firebase","initializeApp","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","data","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","note","push","id","types","activeNote","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","console","log","startSavingNote","getState","noteToFirestore","url","doc","update","refreshNote","Swal","fire","icon","title","text","noteDelete","useForm","initialState","useState","formValues","setFormValues","reset","newFormState","handleChange","target","name","value","NotesAppBar","useSelector","state","active","useDispatch","className","moment","format","style","display","onChange","files","willOpen","showLoading","fileUrl","close","startUploadingFile","onClick","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","NothingSelected","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logout","JournalEntry","date","noteDate","backgroundSize","backgroundImage","JournalEntries","map","entry","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","onSubmit","e","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","isStrongPassword","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","protoTypes","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.276ff49e.chunk.js","sourcesContent":["/* configuracion de firebase con firestore y auth */\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_APIKEY,\r\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECTID,\r\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n  appId: process.env.REACT_APP_APPID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore()\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport {db, googleAuthProvider, firebase}","\r\n\r\nexport const fileUpload = async(file) => {\r\n\r\n    const cloudURL = 'https://api.cloudinary.com/v1_1/dixkox8dy/upload'\r\n\r\n    const formData = new FormData()\r\n    formData.append('upload_preset', 'react-journal-app')\r\n    formData.append('file', file)\r\n\r\n    try {\r\n        const resp = await fetch(cloudURL, {method: 'POST', body: formData})\r\n\r\n        if (resp.ok) {\r\n            const data = await resp.json()\r\n            return data.secure_url\r\n        } else {\r\n            return null\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}","import { db } from \"../firebase/config\"\r\n\r\n\r\nexport const loadNotes = async(uid) => {\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get()\r\n    const notes = []\r\n    notesSnap.forEach(note => {\r\n        notes.push({\r\n            id: note.id,\r\n            ...note.data()\r\n        })\r\n    })\r\n    return notes\r\n\r\n}","export const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set error',\r\n    uiRemoveError: '[UI] Remove error',\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout cleaning',\r\n\r\n}","import Swal from 'sweetalert2'\r\nimport {db} from '../firebase/config'\r\nimport { fileUpload } from '../helpers/fileUpload'\r\nimport { loadNotes } from '../helpers/loadNotes'\r\nimport { types } from '../types/types'\r\n\r\n\r\nexport const startNewNote = () => {\r\n    /* getState es una funcion similar al useSelector */ \r\n    return async(dispatch, getState) => {\r\n        try {\r\n            const {uid} = getState().auth\r\n            const newNote = {\r\n                title: '',\r\n                body: '',\r\n                date: new Date().getTime(),\r\n            }\r\n            const doc = await db.collection(`${uid}/journal/notes`).add(newNote)\r\n            dispatch(activeNote(doc.id, newNote))\r\n            dispatch(addNewNote(doc.id, newNote))\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {id, ...note}\r\n})\r\n\r\n\r\nexport const startLoadingNotes = uid => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const notes = await loadNotes(uid)\r\n            dispatch(setNotes(notes))\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const setNotes = notes => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\n\r\nexport const startSavingNote = note => {\r\n    return async(dispatch, getState) => {\r\n        try {\r\n            const {uid} = getState().auth\r\n            const noteToFirestore = {...note}\r\n            delete noteToFirestore.id\r\n            if (!noteToFirestore.url) {\r\n                delete noteToFirestore.url\r\n            }\r\n            await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore)\r\n            dispatch(refreshNote(note))\r\n            /* Comentado porque en entorno de pruebas me salta un error\r\n            No se hacer el mock del Swal */\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Saved!',\r\n                text: note.title\r\n            })\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const refreshNote = note => ({\r\n    type: types.notesUpdated,\r\n    payload: note\r\n})\r\n\r\n\r\nexport const startUploadingFile = file => {\r\n    return async(dispatch, getState) => {\r\n        try {\r\n            const {active:activeNote} = getState().notes\r\n            /* Comentado porque en entorno de pruebas me salta un error\r\n            No se hacer el mock del Swal */\r\n            Swal.fire({\r\n                title: 'Uploading...',\r\n                text: 'Please wait...',\r\n                willOpen: () => {\r\n                    Swal.showLoading()\r\n                }\r\n            })\r\n            const fileUrl = await fileUpload(file)\r\n            dispatch(startSavingNote({...activeNote, url: fileUrl}))\r\n            /* Comentado porque en entorno de pruebas me salta un error\r\n            No se hacer el mock del Swal */\r\n            Swal.close()\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const startDeletingNote = id => {\r\n    return async(dispatch, getState) => {\r\n        try {\r\n            const {uid} = getState().auth\r\n            await db.doc(`${uid}/journal/notes/${id}`).delete()\r\n            dispatch(noteDelete(id))\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const noteDelete = id => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\n\r\nexport const logoutCleaning = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import { useState } from \"react\";\r\n\r\nconst useForm = (initialState={}) => {\r\n    \r\n    const [formValues, setFormValues] = useState(initialState);\r\n\r\n    const reset = (newFormState=initialState) => setFormValues(newFormState)\r\n\r\n    const handleChange = ({target}) => {setFormValues({\r\n        ...formValues,\r\n        [target.name]: target.value\r\n    })}\r\n\r\n    return [formValues, handleChange, reset]\r\n\r\n}\r\n\r\nexport default useForm;\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSavingNote, startUploadingFile } from '../../actions/notes'\r\nimport moment from 'moment'\r\n\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const {active:note} = useSelector(state => state.notes)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSaveClick = () => {\r\n        dispatch(startSavingNote(note))\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#inputPicture').click()\r\n    }\r\n\r\n    const handleFileChange = ({target}) => {\r\n        const file = target.files[0]\r\n        if (file) {\r\n            dispatch(startUploadingFile(file))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='notes__appbar'>\r\n            <span>{moment().format('LL')}</span>\r\n            <div>\r\n                <input\r\n                    id='inputPicture'\r\n                    type='file'\r\n                    name='file'\r\n                    style={{display: 'none'}}\r\n                    onChange={handleFileChange}\r\n                />\r\n                <button className='btn' onClick={handlePictureClick}>Picture</button>\r\n                <button className='btn' onClick={handleSaveClick}>Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useSelector } from 'react-redux'\r\nimport { activeNote, startDeletingNote } from '../../actions/notes'\r\nimport useForm from '../../hooks/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {active:note} = useSelector(state => state.notes)\r\n    const [formValues, handleChange, reset] = useForm(note)\r\n    const {title, body, url} = formValues\r\n\r\n    /*Cuando el cambio en una variables (eg note) no ejecuta otras partes del codigo \r\n    (eg useForm(note)), conviene crear una referencia y efectos secundarios para \r\n    poder hacer notar los cambios donde se necesiten, como se muestra a continuacion*/\r\n    const activeId = useRef(note.id)\r\n    useEffect(() => {\r\n        if (note.id !== activeId.current) {\r\n            reset(note)\r\n            activeId.current = note.id\r\n        }\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id, formValues))\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeletingNote(note.id))\r\n    }\r\n    \r\n    return (\r\n        <div className='notes__main-content animate__animated animate__fadeIn animate__faster'>\r\n            <NotesAppBar />\r\n\r\n            <div className='notes__content'>\r\n                <input\r\n                    type='text'\r\n                    placeholder='some awesome title'\r\n                    className='notes__title-input'\r\n                    autoComplete='off'\r\n                    name='title'\r\n                    value={title}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder='what happened today?'\r\n                    className='notes__textarea'\r\n                    name='body'\r\n                    value={body}\r\n                    onChange={handleChange}\r\n                >\r\n                </textarea>\r\n\r\n                {\r\n                    url\r\n                    &&\r\n                    <div className='notes__image'>\r\n                        <img\r\n                            src={`${url}`}\r\n                            alt='imagen'\r\n                            name='url'\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n            <button className='btn btn-danger' onClick={handleDelete}>\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className='nothing__main-content animate__animated animate__fadeIn animate__faster'>\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry!\r\n            </p>\r\n            <i className='far fa-star fa-4x mt-5'></i>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError, \r\n    payload: err\r\n})\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import Swal from 'sweetalert2'\r\nimport { firebase, googleAuthProvider } from \"../firebase/config\"\r\nimport { types } from \"../types/types\"\r\nimport { logoutCleaning } from './notes'\r\nimport { finishLoading, startLoading } from \"./ui\"\r\n\r\n\r\n\r\n/* inicio de sesion con firebase */\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch(startLoading())\r\n        // No entiendo este return, se usa para que las pruebas funciones, pero no entiendo por que\r\n        return firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({user}) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n                dispatch(finishLoading())\r\n            })\r\n            .catch(({message}) => {\r\n                Swal.fire('', message, 'error')\r\n                dispatch(finishLoading())\r\n            })\r\n    }\r\n}\r\n\r\n\r\n/* inicio de sesion con google */\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({user}) => {\r\n                const {uid, displayName} = user\r\n                dispatch(login(uid, displayName))\r\n            })\r\n            .catch(({message}) => {\r\n                Swal.fire('', message, 'error')\r\n            })\r\n    }\r\n}\r\n\r\n/* registro con firebase */\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n\r\n        // para registrar\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async({user}) => {\r\n\r\n                // para actualizar datos\r\n                await user.updateProfile({\r\n                    displayName: name\r\n                })\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n            .catch(({message}) => {\r\n                Swal.fire('', message, 'error')\r\n            })\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n        // para cerrar sesion\r\n        try {\r\n            await firebase.auth().signOut()\r\n            dispatch(logout())\r\n            dispatch(logoutCleaning())\r\n        } catch ({message}) {\r\n            Swal.fire('', message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\n/* Estas son funciones que retornan acciones!, las anteriores son funciones para \r\nprocesar informacion y posteriormente con un dispatch, ejecutar funciones que retornan \r\nuna accion */\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login, \r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n})\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { activeNote } from '../../actions/notes'\r\nimport moment from 'moment'\r\n\r\n\r\nexport const JournalEntry = ({id, title, body, date, url}) => {\r\n\r\n    const noteDate = moment(date)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleViewNote = () => {\r\n        dispatch(activeNote(id, {title, body, date, url}))\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className='journal__entry pointer animate__animated animate__slideInLeft animate__faster'\r\n            onClick={handleViewNote}\r\n        >\r\n            {\r\n                url\r\n                &&\r\n                <div\r\n                    className='journal__entry-picture'\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                ></div>\r\n            }\r\n            <div className='journal__entry-body'>\r\n                <p className='journal__entry-title'>{title}</p>\r\n                <p className='journal__entry-content'>{body}</p>\r\n            </div>\r\n            <div className='journal__entry-date-box'>\r\n                <span> {noteDate.format('dddd')} </span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className='journal__entries'>\r\n            {\r\n                notes.map(entry => <JournalEntry key={entry.id} {...entry} />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport { startNewNote } from '../../actions/notes'\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {name:displayName} = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    const handleNewEntry = () => {\r\n        dispatch(startNewNote())\r\n    }\r\n\r\n    return (\r\n        <aside className='journal__sidebar'>\r\n            <div className='journal__sidebar-navbar'>\r\n                <h3 className='mt-5'>\r\n                    <i className='far fa-moon'></i>\r\n                    <span> {displayName}</span>\r\n                </h3>\r\n                <button className='btn' onClick={handleLogout}>\r\n                    Logout\r\n                </button>\r\n            </div>\r\n            <div className='journal__new-entry' onClick={handleNewEntry}>\r\n                <i className='far fa-calendar-plus fa-5x'></i>\r\n                <p className='mt-5'>New entry</p>\r\n\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className='journal__main-content animate__animated animate__fadeIn animate__faster'>\r\n\r\n            \r\n            \r\n            <Sidebar />\r\n            <main>\r\n                {\r\n                    (active)\r\n                    ?\r\n                    <NoteScreen />\r\n                    :\r\n                    <NothingSelected />\r\n                }\r\n            </main>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport useForm from '../../hooks/useForm'\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const {loading} = useSelector(state => state.ui)\r\n\r\n    /* Hook de react-redux para disparar acciones y que el \r\n    'store' se encargue de buscar el reducer adecuado */\r\n    const dispatch = useDispatch()\r\n\r\n    const [formValues, handleChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const {email, password} = formValues\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password))\r\n    }\r\n\r\n    /* el dispatch del custom hook de react-redux puede recibir funciones como \r\n    arguemntos que retornen un callback, el hook pasara la funcion 'dispatch' \r\n    como argumento a ese callback retornado, para que desde ese callback, pueda ser llamando \r\n    finalmente la accion (con su type y payload), ver 'actions/auth.js' */\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin())\r\n    }\r\n\r\n    return (\r\n        <div className='animate__animated animate__fadeIn animate__faster'>\r\n            <h3 className='auth__title'>Login</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type='text'\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    className='auth__input'\r\n                    autoComplete='off'\r\n                    value={email}\r\n                    onChange={handleChange}\r\n                />\r\n                <input\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    name='password'\r\n                    className='auth__input'\r\n                    value={password}\r\n                    onChange={handleChange}\r\n                />\r\n                <button\r\n                    type='submit'\r\n                    className='btn btn-primary btn-block'\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className='auth__social-network'>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link to='/auth/register' className='link'>\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport useForm from '../../hooks/useForm'\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    /* useSelector: hook del react-redux utilizado para acceder a la \r\n    informacion del store (tal como se ve en la pestana state del \r\n    redux devtools) */\r\n    const {msgError} = useSelector(state => state.ui)\r\n\r\n    const [formValues, handleChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n    })\r\n\r\n    const {name, email, password, password2} = formValues\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError('Name is required'))\r\n            return false\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is not valid'))\r\n            return false\r\n        } else if (password !== password2 || !validator.isStrongPassword(password)) {\r\n            dispatch(setError('Password is not valid'))\r\n            return false\r\n        }\r\n        dispatch(removeError())\r\n        return true\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className='animate__animated animate__fadeIn animate__faster'>\r\n            <h3 className='auth__title'>Register</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                {\r\n                    msgError\r\n                    &&\r\n                    (<div className='auth__alert-error'>\r\n                        {msgError}\r\n                    </div>)\r\n                }\r\n                <input\r\n                    type='text'\r\n                    placeholder='Name'\r\n                    name='name'\r\n                    className='auth__input'\r\n                    autoComplete='off'\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                />\r\n                <input\r\n                    type='text'\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    className='auth__input'\r\n                    autoComplete='off'\r\n                    value={email}\r\n                    onChange={handleChange}\r\n                />\r\n                <input\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    name='password'\r\n                    className='auth__input'\r\n                    value={password}\r\n                    onChange={handleChange}\r\n                />\r\n                <input\r\n                    type='password'\r\n                    placeholder='Confirm password'\r\n                    name='password2'\r\n                    className='auth__input'\r\n                    value={password2}\r\n                    onChange={handleChange}\r\n                />\r\n                <button\r\n                    type='submit'\r\n                    className='btn btn-primary btn-block mb-5'\r\n                >\r\n                    Sign in\r\n                </button>\r\n\r\n                <Link to='/auth/login' className='link'>\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className='auth__main'>\r\n            <div className='auth__box-container'>\r\n                <Switch>\r\n                    <Route exact path='/auth/login' component={LoginScreen} />\r\n                    <Route exact path='/auth/register' component={RegisterScreen} />\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        \r\n        <Route {...rest}\r\n            component={props => (\r\n                (isAuthenticated)\r\n                ? <Component {...props} />\r\n                : <Redirect to='/auth/login' />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.protoTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        /* Al utilizar un router secundario, no utilizar la propiedad 'exact' */\r\n        <Route {...rest}\r\n            component={props => (\r\n                (!isAuthenticated)\r\n                ? <Component {...props} />\r\n                : <Redirect to='/' />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPublicRoute.protoTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Redirect, Switch } from 'react-router-dom'\r\nimport { JournalScreen } from '../components/journal/JournalScreen'\r\nimport { AuthRouter } from './AuthRouter'\r\nimport { firebase } from '../firebase/config';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [checking, setChecking] = useState(true)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    /* Se usa para mantener el state aunque actualice la página, ya que firebase \r\n    mantiene informacion de la sesión */\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async(user) => {\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName))\r\n                setIsLoggedIn(true)\r\n                await dispatch(startLoadingNotes(user.uid))\r\n            } else {\r\n                setIsLoggedIn(false)\r\n            }\r\n            setChecking(false)\r\n        })\r\n    }, [dispatch])\r\n\r\n    if (checking) {\r\n        return <h1>Wait...</h1>\r\n    }\r\n\r\n    /*When true, will only match if the path matches the location.pathname exactly\r\n    path\tlocation.pathname\texact\tmatches?\r\n    /one\t/one/two\ttrue\tno\r\n    /one\t/one/two\tfalse\tyes*/\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    {/* Las rutas publicas son utiles para redireccionar aunque estes logueado, \r\n                    impide que entres a la pagina del login cuando estas autenticado*/}\r\n                    <PublicRoute path='/auth' component={AuthRouter} isAuthenticated={isLoggedIn}/>\r\n                    {/* Las rutas privadas obligan al usuario a estar autenticado para visualizarlas */}\r\n                    <PrivateRoute exact path='/' component={JournalScreen} isAuthenticated={isLoggedIn}/>\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state=initialState, action) => {\r\n\r\n    switch (action?.type) {\r\n\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        \r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\n\r\nexport const notesReducer = (state=initialState, action) => {\r\n\r\n    switch (action?.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                },\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(note => \r\n                    (note.id === action.payload.id\r\n                    ?\r\n                    action.payload\r\n                    :\r\n                    note)\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.filter(note => note.id !== action.payload),\r\n                active: null\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return initialState\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","/* Este archivo sirve de guia para cualquier store, ya que tiene configurador \r\nel redux dev tools y el applyMiddleware, usado para gestionar las peticiones \r\nasincronas, recordadno que el ciclo de trabajo en redux, debe ser síncrono \r\nentre el dispatcher y los cambios de estados */\r\n\r\n\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    // a traves de las claves de este objeto se accede a lo que tiene el store almacenado\r\n    // utilizando el hook useSelector\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer,\r\n})\r\n\r\n/* createStore solo recibe un reducer, para pasar varios, se unifican todos los necesarios\r\nen uno solo con la funcion combineReducers como se muestra en las lineas previas */\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = (state={}, action) => {\r\n\r\n    switch (action?.type) {\r\n\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName,\r\n            }\r\n\r\n        case types.logout:\r\n            return { }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\n\r\nexport const JournalApp = () => {\r\n\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}